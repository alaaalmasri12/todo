{"version":3,"sources":["components/todo/useForm.js","components/todo/form.js","components/todo/list.js","components/todo/todo-connected.js","components/header/header.js","app.js","index.js"],"names":["useForm","callback","useState","FormItem","setForm","e","persist","target","name","value","preventDefault","reset","TodoForm","props","task","handleSubmit","setitem","handleInputChange","Form","onSubmit","Card","style","width","Body","Label","Control","type","placeholder","onChange","defaultValue","min","max","Button","TodoList","list","map","item","i","className","complete","toString","key","_id","Alert","color","onClick","handleComplete","text","variant","handleDelete","handleUpdate","todoAPI","ToDo","setList","useEffect","axios","get","then","res","console","log","data","catch","err","filter","length","due","Date","fetch","method","mode","cache","headers","body","JSON","stringify","response","json","savedItem","error","id","index","indexOf","delete","afterDelete","window","location","reload","input","document","getElementsByName","Header","Navbar","bg","expand","Brand","App","Fragment","Main","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.8cf0a3cd.chunk.js","sourcesContent":["import {useState} from 'react';\n\n\nconst useForm=(callback)=>{\n    const [FormItem, setForm] = useState({});\n    const handleInputChange = e => {\n        e.persist();\n        setForm({...FormItem, [e.target.name]: e.target.value });\n      };\n    \n     const handleSubmit = (e) => {\n        e.preventDefault();\n        e.target.reset();\n        callback( FormItem );\n      };\n      return [handleInputChange,handleSubmit];\n    \n}\nexport default useForm;\n","import React, { useState, useEffect } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Navbar from 'react-bootstrap/Navbar';\nimport useForm from './useForm';\n\n// import the css file\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction TodoForm(props) {\n  const [handleInputChange,handleSubmit]=useForm(doitem);\n  const [allitem, setitem] = useState({});\n\n \n  function doitem(task)\n  {\n    props.handleSubmit(task);\n    setitem(task);\n  }\n    return (\n      <>\n        <h3>Add Item</h3>\n        <Form onSubmit={handleSubmit}>\n        <Card style={{ width: '18rem' }}>\n       <Card.Body>\n          <Form.Label>\n            <span>To Do Item</span>\n            <Form.Control type=\"text\" name=\"text\"  placeholder=\"Add To Do List Item\" onChange={handleInputChange} />\n          </Form.Label>\n          <Form.Label>\n            <span>Difficulty Rating</span>\n            <input defaultValue=\"1\" type=\"range\" min=\"1\" max=\"5\" name=\"difficulty\" onChange={handleInputChange} />\n          </Form.Label>\n          <Form.Label>\n            <span>Assigned To</span>\n            <Form.Control type=\"text\" name=\"assignee\"  placeholder=\"Assigned To\" onChange={handleInputChange} />\n          </Form.Label>\n          <Button type=\"submit\" >Add Item</Button>\n          </Card.Body>\n          </Card>\n        </Form>\n       \n      </>\n      \n    );\n}\nexport default TodoForm;\n","import React from 'react'; \nimport Alert from 'react-bootstrap/Alert'\nimport Button from 'react-bootstrap/Button';\n\n  function TodoList(props) {\n    return (\n      <ul>\n      {props.list.map((item,i) => (\n      \n        <li        \n          className={`complete-${item.complete.toString()}`}\n          key={item._id}\n        >\n             <Alert color=\"success\">\n             <span onClick={() =>props.handleComplete(item._id)}>\n            {item.text}\n          </span>    \n       </Alert>\n                    \n          <Button variant=\"outline-danger\" onClick={() =>props.handleDelete(item._id)}>Delete</ Button>\n          <Button variant=\"outline-info\" onClick={() => props.handleUpdate(i)}>Update </Button>\n          <input type=\"text\" name={i}  placeholder={'Update text '+item.text} />\n         \n        </li>\n      ))}\n    </ul>\n    ); \n}\n\nexport default TodoList;\n","import React, { useEffect, useState } from 'react';\nimport TodoForm from './form.js';\nimport TodoList from './list.js';\nimport Alert from 'react-bootstrap/Alert';\nimport axios from 'axios';\nimport './todo.scss';\nconst todoAPI = 'https://access-denied-lab-32.herokuapp.com/todo';\n// https://access-denied-lab-32.herokuapp.com/todo\n// https://lab32-401.herokuapp.com/todo\n// https://lab-32.herokuapp.com/todo\nconst ToDo = () => {\n  const [list, setList] = useState([]);\n  const _addItem = (item) => {\n    item.due = new Date();\n    fetch(todoAPI, {\n      method: 'post',\n      mode: 'cors',\n      cache: 'no-cache',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(item),\n    })\n      .then(response => response.json())\n      .then(savedItem => {\n        setList([...list, savedItem]);\n      })\n      .catch(console.error);\n  };\n  const _toggleComplete = id => {\n    let item = list.filter(i => i._id === id)[0] || {};\n    let index = list.indexOf(item);\n    console.log(index,'index');\n    if (item._id) {\n      item.complete = !item.complete;\n      fetch(todoAPI, {\n        method: 'put',\n        mode: 'cors',\n        cache: 'no-cache',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(item),\n      })\n        .then(response => response.json())\n        .then(savedItem => {\n          console.log('savedItemsavedItemsavedItem',savedItem);\n          list[index] = savedItem;\n          setList([...list]);\n        })\n        .catch(console.error);\n    }\n  };\n  const handleUpdate =(i) =>{\n    // listAll.splice(1,1)\n    let input = document.getElementsByName(i)[0].value;\n    list[i].text = input;\n    console.log('arrarrarrarr',list);\n    fetch(todoAPI, {\n      method: 'put',\n      mode: 'cors',\n      cache: 'no-cache',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(list[i]),\n    })\n      .then(response => response.json())\n      .then(savedItem => {\n        console.log('savedItemsavedItemsavedItem',savedItem);\n        setList([...list]);\n      })\n      .catch(console.error);\n    setList(list);\n  };\n  const handleDelete =(_id) =>{\n    // let item = list.filter(i => i._id === _id)[0] || {};\n    // let index = list.indexOf(item);\n    axios.delete(todoAPI, {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      data: {\n        _id:_id,\n      },\n    })\n      .then(afterDelete => {\n        // list.splice(index,1);\n        window.location.reload(true);\n      })\n      .catch(console.error);\n  };\n  // empty response: {}\n  const _getTodoItems = () => {\n    axios.get(todoAPI)\n      .then(res => {\n        console.log(res);\n        setList(res.data);\n      }, [])\n      .catch(err => {\n        console.log(err);\n      });\n  };\n  useEffect(_getTodoItems, []);\n  // useEffect(_toggleComplete, list);\n  return (\n    <><div>\n      <Alert color=\"success\">\n        <h2>\n          There are {list.filter(item => !item.complete).length} Items To Complete\n        </h2>\n      </Alert>\n    </div>\n    <section className=\"todo\">\n      <div>\n        <TodoForm handleSubmit={_addItem} />\n      </div>\n      <div>\n        <TodoList\n          list={list}\n          handleComplete={_toggleComplete}\n          handleDelete={handleDelete}\n          handleUpdate={handleUpdate}\n        /> \n      </div>\n    </section>\n    </>\n  );\n};\nexport default ToDo;","import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction Header(props) {\n    return (\n        <>\n            <header>\n                <Navbar bg=\"primary\" expand=\"lg\">\n                    <Navbar.Brand >Home</Navbar.Brand>\n                </Navbar>\n            </header>\n        </>\n    )\n}\nexport default Header;\n\n{/* <footer>\n<Navbar bg=\"dark\">\n    <Navbar.Brand>&copy; 2020 401d3</Navbar.Brand>\n</Navbar>\n</footer> */}","import React from 'react';\nimport ToDo from './components/todo/todo-connected';\nimport Header from './components/header/header.js';\n\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <Header />\n      <ToDo />\n      \n    </React.Fragment>\n\n  )\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app.js';\nfunction Main()\n{\n  return(\n    <React.Fragment>\n    <App />\n  </React.Fragment>\n  )\n \n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Main />, rootElement);\n"],"sourceRoot":""}