{"version":3,"sources":["components/footer/footer.js","components/todo/useForm.js","components/todo/form.js","context/auth/context.js","components/todo/list.js","components/todo/todo-connected.js","components/header/header.js","app.js","index.js"],"names":["Footer","props","Navbar","bg","Brand","useForm","callback","useState","FormItem","setForm","e","persist","target","name","value","preventDefault","reset","TodoForm","task","handleSubmit","setitem","handleInputChange","Form","onSubmit","Card","style","width","Body","Label","Control","type","placeholder","onChange","defaultValue","min","max","Button","SettingsContext","React","createContext","SettingsProvider","array","setTitle","start","setStart","count","setcount","state","changeTitleTo","pages","list","number","document","getElementsByName","console","log","newarr","Array","Math","ceil","length","view","i","end","Number","Provider","children","TodoList","context","useContext","onClick","sort","a","b","difficulty","slice","map","item","className","complete","toString","key","_id","handleComplete","text","variant","handleDelete","handleUpdate","Pagination","Item","todoAPI","ToDo","setList","useEffect","axios","get","then","res","data","catch","err","Alert","color","filter","due","Date","fetch","method","mode","cache","headers","body","JSON","stringify","response","json","savedItem","error","id","index","indexOf","delete","afterDelete","window","location","reload","input","Header","expand","App","Fragment","Main","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.3e7eefef.chunk.js","sourcesContent":["import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction Footer(props) {\n    return (\n        <>\n           <footer>\n<Navbar bg=\"dark\">\n    <Navbar.Brand>&copy; 2020 401d3</Navbar.Brand>\n</Navbar>\n</footer>\n        </>\n    )\n}\nexport default Footer;\n","import {useState} from 'react';\n\n\nconst useForm=(callback)=>{\n    const [FormItem, setForm] = useState({});\n    const handleInputChange = e => {\n        e.persist();\n        setForm({...FormItem, [e.target.name]: e.target.value });\n      };\n    \n     const handleSubmit = (e) => {\n        e.preventDefault();\n        e.target.reset();\n        callback( FormItem );\n      };\n      return [handleInputChange,handleSubmit];\n    \n}\nexport default useForm;\n","import React, { useState, useEffect } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Navbar from 'react-bootstrap/Navbar';\nimport useForm from './useForm';\n\n// import the css file\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction TodoForm(props) {\n  const [handleInputChange,handleSubmit]=useForm(doitem);\n  const [allitem, setitem] = useState({});\n\n \n  function doitem(task)\n  {\n    props.handleSubmit(task);\n    setitem(task);\n  }\n    return (\n      <>\n        <h3>Add Item</h3>\n        <Form onSubmit={handleSubmit}>\n        <Card style={{ width: '18rem' }}>\n       <Card.Body>\n          <Form.Label>\n            <span>To Do Item</span>\n            <Form.Control type=\"text\" name=\"text\"  placeholder=\"Add To Do List Item\" onChange={handleInputChange} />\n          </Form.Label>\n          <Form.Label>\n            <span>Difficulty Rating</span>\n            <input defaultValue=\"1\" type=\"range\" min=\"1\" max=\"5\" name=\"difficulty\" onChange={handleInputChange} />\n          </Form.Label>\n          <Form.Label>\n            <span>Assigned To</span>\n            <Form.Control type=\"text\" name=\"assignee\"  placeholder=\"Assigned To\" onChange={handleInputChange} />\n          </Form.Label>\n          <Button type=\"submit\" >Add Item</Button>\n          </Card.Body>\n          </Card>\n        </Form>\n       \n      </>\n      \n    );\n}\nexport default TodoForm;\n","import React, { useState } from 'react';\n\nexport const SettingsContext = React.createContext();\n\nfunction SettingsProvider(props) {\n  const [array, setTitle] = useState([1]);\n  const [start, setStart] = useState(0);\n  const [count, setcount] = useState();\n  \n  const pages = function (list){\n    let number = document.getElementsByName('pages');\n    console.log('number',number);\n    let newarr = new Array(Math.ceil(list.length/(number[0].value)));\n    setTitle([...newarr]);\n  };\n\n  const view = function(i){\n    let number = document.getElementsByName('pages')[0].value;\n    let end =Number(number) + (number*i);\n    setStart(Number(number*i));\n    setcount(end);\n  };\n  \n  const state = {\n    array,\n    changeTitleTo: setTitle,\n    pages: pages,\n    view:view,\n    start,\n    count,\n  };\n\n  return (\n    <SettingsContext.Provider value={state}>\n      {props.children}\n    </SettingsContext.Provider>\n  );\n}\n\nexport default SettingsProvider;","import React, { useContext,useEffect } from 'react';\nimport {SettingsContext} from '../../context/auth/context';\nimport  SettingsContex1 from '../../context/auth/context';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Pagination from 'react-bootstrap/Pagination';\n\nfunction TodoList (props) {\n  const context = useContext(SettingsContext);\n  return (\n    <>\n    \n      <ul>\n        \n        <Form.Control type=\"Number\" name='pages'  placeholder={'number pages'} />\n        <Button onClick={() => context.pages(props.list)}>Number of element</Button>\n        {props.list.sort((a,b) => (a.difficulty > b.difficulty) ? 1 : ((b.difficulty > a.difficulty) ? -1 : 0)).slice(context.start,context.count).map((item,i) => (\n\n          <li\n            className={`complete-${item.complete.toString()}`}\n            key={item._id}\n          >\n            <span onClick={() => props.handleComplete(item._id)}>\n              {item.text}\n            </span>\n            <span >{item.difficulty}</span>\n            <Button variant=\"danger\" onClick={() => props.handleDelete(item._id)}>Delete </Button>\n            <Button variant=\"primary\" bg=\"primary\" onClick={() => props.handleUpdate(i)}>Update </Button>\n            <Form.Control type=\"text\" name={i}  placeholder={'Update text '+item.text} />\n          </li>           \n        ))}    \n      </ul>\n      <ul>    \n        {context.array.map((item,i) => (\n          <li\n            key={item}\n          >\n            <Pagination.Item><button onClick={() => context.view(i)}>{i+1}</button></Pagination.Item>\n            \n          </li>\n        ))}\n      </ul>\n      <div>\n        <SettingsContex1 list={props.list} />\n      </div>\n    </>\n  );\n}\n\nexport default TodoList;","import React, { useEffect, useState } from 'react';\nimport TodoForm from './form.js';\nimport TodoList from './list.js';\nimport Alert from 'react-bootstrap/Alert';\nimport axios from 'axios';\nimport './todo.scss';\nconst todoAPI = 'https://access-denied-lab-32.herokuapp.com/todo';\nconst ToDo = () => {\n  const [list, setList] = useState([]);\n  const _addItem = (item) => {\n    item.due = new Date();\n    fetch(todoAPI, {\n      method: 'post',\n      mode: 'cors',\n      cache: 'no-cache',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(item),\n    })\n      .then(response => response.json())\n      .then(savedItem => {\n        setList([...list, savedItem]);\n      })\n      .catch(console.error);\n  };\n  \n  const _toggleComplete = id => {\n    let item = list.filter(i => i._id === id)[0] || {};\n    let index = list.indexOf(item);\n    console.log(index,'index');\n    if (item._id) {\n      item.complete = !item.complete;\n      fetch(todoAPI, {\n        method: 'put',\n        mode: 'cors',\n        cache: 'no-cache',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(item),\n      })\n        .then(response => response.json())\n        .then(savedItem => {\n          console.log('savedItemsavedItemsavedItem',savedItem);\n          list[index] = savedItem;\n          setList([...list]);\n        })\n        .catch(console.error);\n    }\n  };\n  const handleUpdate =(i) =>{\n    // listAll.splice(1,1)\n    let input = document.getElementsByName(i)[0].value;\n    list[i].text = input;\n    console.log('arrarrarrarr',list);\n    fetch(todoAPI, {\n      method: 'put',\n      mode: 'cors',\n      cache: 'no-cache',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(list[i]),\n    })\n      .then(response => response.json())\n      .then(savedItem => {\n        console.log('savedItemsavedItemsavedItem',savedItem);\n        setList([...list]);\n      })\n      .catch(console.error);\n    setList(list);\n  };\n  const handleDelete =(_id) =>{\n    // let item = list.filter(i => i._id === _id)[0] || {};\n    // let index = list.indexOf(item);\n    axios.delete(todoAPI, {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      data: {\n        _id:_id,\n      },\n    })\n      .then(afterDelete => {\n        // list.splice(index,1);\n        window.location.reload(true);\n      })\n      .catch(console.error);\n  };\n  // empty response: {}\n  const _getTodoItems = () => {\n    axios.get(todoAPI)\n      .then(res => {\n        console.log(res);\n        \n        setList(res.data);\n      }, [])\n      .catch(err => {\n        console.log(err);\n      });\n  };\n  useEffect(_getTodoItems, []);\n  // useEffect(_toggleComplete, list);\n  return (\n    <><div>\n      <Alert color=\"success\" className=\"task\">\n        <h2>\n          There are {list.filter(item => !item.complete).length} Items To Complete\n        </h2>\n      </Alert>\n    </div>\n    <section className=\"todo\">\n      <div>\n        <TodoForm handleSubmit={_addItem} />\n      </div>\n      <div>\n        <TodoList\n          list={list}\n          handleComplete={_toggleComplete}\n          handleDelete={handleDelete}\n          handleUpdate={handleUpdate}\n        /> \n      </div>\n    </section>\n    </>\n  );\n};\nexport default ToDo;","import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction Header(props) {\n    return (\n        <>\n            <header>\n                <Navbar bg=\"primary\" expand=\"lg\">\n                    <Navbar.Brand >Home</Navbar.Brand>\n                </Navbar>\n            </header>\n        </>\n    )\n}\nexport default Header;\n\n","import React from 'react';\nimport Footer from './components/footer/footer';\nimport ToDo from './components/todo/todo-connected';\nimport Header from './components/header/header.js';\nimport SettingsContext from './context/auth/context';\nfunction App() {\n  return (\n    <React.Fragment>\n      <SettingsContext>\n      <Header />\n      <ToDo />\n      </SettingsContext>\n      <Footer/>\n     \n      \n    </React.Fragment>\n\n  )\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app.js';\nfunction Main()\n{\n  return(\n    <React.Fragment>\n    <App />\n  </React.Fragment>\n  )\n \n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Main />, rootElement);\n"],"sourceRoot":""}