{"version":3,"sources":["components/todo/form.js","components/todo/list.js","components/todo/todo.js","components/header.js","app.js","index.js"],"names":["TodoForm","props","useState","allitem","setitem","handleInputChange","e","target","name","value","Form","onSubmit","preventDefault","reset","handleSubmit","Card","style","width","Body","Label","Control","type","placeholder","onChange","defaultValue","min","max","Button","TodoList","taskobject","list","map","item","i","className","complete","toString","key","_id","Alert","color","onClick","handleComplete","text","variant","handleDelete","handleUpdate","counter","ToDo","listall","setList","useEffect","gettask","localStorage","getItem","JSON","parse","filter","length","console","log","push","setItem","stringify","id","listItem","pop","taskcount","listToDelete","result","el","indexOf","input","document","getElementsByName","window","location","reload","Navbar","bg","Brand","Header","expand","App","Fragment","Main","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.644de380.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Navbar from 'react-bootstrap/Navbar';\n\n// import the css file\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction TodoForm(props) {\n\n  const [allitem, setitem] = useState({});\n\n const handleInputChange = e => {\n    setitem({...allitem, [e.target.name]: e.target.value });\n  };\n\n const handleSubmit = (e) => {\n    e.preventDefault();\n    e.target.reset();\n    props.handleSubmit(allitem);\n    const item = {};\n    setitem( item );\n  };\n\n    return (\n      <>\n        <h3>Add Item</h3>\n        <Form onSubmit={handleSubmit}>\n        <Card style={{ width: '18rem' }}>\n       <Card.Body>\n          <Form.Label>\n            <span>To Do Item</span>\n            <Form.Control type=\"text\" name=\"text\"  placeholder=\"Add To Do List Item\" onChange={handleInputChange} />\n          </Form.Label>\n          <Form.Label>\n            <span>Difficulty Rating</span>\n            <input defaultValue=\"1\" type=\"range\" min=\"1\" max=\"5\" name=\"difficulty\" onChange={handleInputChange} />\n          </Form.Label>\n          <Form.Label>\n            <span>Assigned To</span>\n            <Form.Control type=\"text\" name=\"assignee\"  placeholder=\"Assigned To\" onChange={handleInputChange} />\n          </Form.Label>\n          <Button type=\"submit\" >Add Item</Button>\n          </Card.Body>\n          </Card>\n        </Form>\n       \n      </>\n      \n      \n    );\n}\nexport default TodoForm;\n","import React from 'react'; \nimport Alert from 'react-bootstrap/Alert'\nimport Button from 'react-bootstrap/Button';\n\n  function TodoList(props) {\n    return (\n      <ul>\n      {props.list.map((item,i) => (\n      \n        <li        \n          className={`complete-${item.complete.toString()}`}\n          key={item._id}\n        >\n             <Alert color=\"success\">\n             <span onClick={() =>props.handleComplete(item._id)}>\n            {item.text}\n          </span>    \n       </Alert>\n                    \n          <Button variant=\"outline-danger\" onClick={() =>props.handleDelete(item._id)}>Delete</ Button>\n          <Button variant=\"outline-info\" onClick={() => props.handleUpdate(i)}>Update </Button>\n          <input type=\"text\" name={i}  placeholder={'Update text '+item.text} />\n         \n        </li>\n      ))}\n    </ul>\n    ); \n}\n\nexport default TodoList;\n","import React, { useState, useEffect } from 'react';\nimport TodoForm from './form.js';\nimport TodoList from './list.js';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Alert from 'react-bootstrap/Alert'\n\nimport './todo.scss';\nvar taskobject;\nvar counter = 0;\nvar taskcount = 0;\nfunction ToDo(props) {\n\n  const [listall, setList] = useState([]);\n\n  const addItem = (item) => {\n    taskcount++;\n    item._id = ++counter;\n    console.log(counter);\n    item.complete = false;\n    setList([...listall, item]);\n    console.log('alaa', listall);\n    listall.push(item);\n    localStorage.setItem('todo', JSON.stringify(listall));\n  }\n\n  const toggleComplete = id => {\n    let item = listall.filter(i => i._id === id)[0] || {};\n    if (item._id) {\n      item.complete = !item.complete;\n      let list = listall.map(listItem => listItem._id === item._id ? item : listItem);\n      list.pop();\n      setList(list);\n    }\n  }\n\n\n  useEffect(() => {\n    let gettask = localStorage.getItem('todo');\n    taskobject = JSON.parse(gettask);\n    gettask = taskobject || []\n    setList(gettask);\n  }, []);\n  const handleDelete = (_id) => {\n    taskcount--;\n    let listToDelete = [_id];\n    let result = listall.filter(el => (-1 == listToDelete.indexOf(el._id)));\n    localStorage.setItem('todo', JSON.stringify(result));\n    console.log('arrarrarrarr', result);\n    setList(result);\n  };\n  const handleUpdate = (i) => {\n    // listAll.splice(1,1)\n    let input = document.getElementsByName(i)[0].value;\n    listall[i].text = input;\n    localStorage.setItem('todo', JSON.stringify(listall));\n    console.log('arrarrarrarr', listall);\n    setList(listall);\n    window.location.reload(true);\n  };\n  return (\n    <>\n      <header>\n        <Alert className=\"task\" >\n          <h2>\n            To do List Manager ({listall.filter(item => !item.complete).length})</h2>\n        </Alert>\n\n      </header>\n      <section className=\"todo\">\n\n        <div>\n          <TodoForm handleSubmit={addItem} />\n        </div>\n        <div>\n          <TodoList\n            list={listall}\n            handleComplete={toggleComplete}\n            handleDelete={handleDelete}\n            handleUpdate={handleUpdate}\n            \n          />\n        </div>\n        \n       \n      </section>\n      <footer>\n            <Navbar bg=\"dark\">\n                <Navbar.Brand>&copy; 2020 401d3</Navbar.Brand>\n            </Navbar>\n        </footer>\n     \n    </>\n    \n  );\n}\n\nexport default ToDo;\n","import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction Header(props) {\n    return (\n        <>\n            <header>\n                <Navbar bg=\"primary\" expand=\"lg\">\n                    <Navbar.Brand >Home</Navbar.Brand>\n                </Navbar>\n            </header>\n        </>\n    )\n}\nexport default Header;\n\n{/* <footer>\n<Navbar bg=\"dark\">\n    <Navbar.Brand>&copy; 2020 401d3</Navbar.Brand>\n</Navbar>\n</footer> */}","import React from 'react';\nimport ToDo from './components/todo/todo.js';\nimport Header from './components/header.js';\n\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <Header />\n      <ToDo />\n      \n    </React.Fragment>\n\n  )\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app.js';\nfunction Main()\n{\n  return(\n    <React.Fragment>\n    <App />\n  </React.Fragment>\n  )\n \n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Main />, rootElement);\n"],"sourceRoot":""}